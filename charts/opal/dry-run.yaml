Release "opal01" does not exist. Installing it now.
NAME: opal01
LAST DEPLOYED: Wed Oct 11 16:42:41 2023
NAMESPACE: datashield
STATUS: pending-install
REVISION: 1
TEST SUITE: None
HOOKS:
MANIFEST:
---
# Source: opal-docker-compose/templates/opal-storage.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: opal-claim0
  name: opal-claim0
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
# Source: opal-docker-compose/templates/opal-service.yaml
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    io.kompose.service: opal
    service: ds-opal
  name: ds-opal
spec:
  ports:
    - name: "8880"
      port: 8880
      targetPort: 8080
  selector:
    io.kompose.service: opal
status:
  loadBalancer: {}
---
# Source: opal-docker-compose/templates/mongo-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy: {}
  template:
    metadata:
      annotations: {}
      labels:
        io.kompose.service: mongo
    spec:
      containers:
        - image: mongo:6.0
          name: mongo
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: opal-docker-compose/templates/mysqldata-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    io.kompose.service: mysqldata
  name: mysqldata
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysqldata
  strategy: {}
  template:
    metadata:
      annotations: {}
      labels:
        io.kompose.service: mysqldata
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
            - name: MYSQL_PASSWORD
            - name: MYSQL_USER
          image: mysql
          name: mysqldata
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: opal-docker-compose/templates/opal-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    io.kompose.service: opal
  name: opal
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: opal
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
      labels:
        io.kompose.service: opal
    spec:
      containers:
        - env:
            - name: MONGO_HOST
              value: mongo
            - name: MONGO_PORT
              value: "27017"
            - name: MYSQLDATA_DATABASE
            - name: MYSQLDATA_HOST
              value: mysqldata
            - name: MYSQLDATA_PASSWORD
            - name: MYSQLDATA_USER
            - name: OPAL_ADMINISTRATOR_PASSWORD
            - name: ROCK_HOSTS
              value: rock:8085
          image: obiba/opal:latest
          name: opal
          ports:
            - containerPort: 8080
          resources: {}
          volumeMounts:
            - mountPath: /srv
              name: opal-claim0
      restartPolicy: Always
      volumes:
        - name: opal-claim0
          persistentVolumeClaim:
            claimName: opal-claim0
status: {}
---
# Source: opal-docker-compose/templates/rock-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels:
    io.kompose.service: rock
  name: rock
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rock
  strategy: {}
  template:
    metadata:
      annotations: {}
      labels:
        io.kompose.service: rock
    spec:
      containers:
        - image: obiba/rock:latest
          name: rock
          resources: {}
      restartPolicy: Always
status: {}
---
# Source: opal-docker-compose/templates/ingress.yaml
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: datashield-ingress
  labels: {}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 32m
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
spec:
  rules:
    - http:
        paths:
          - path: /opal
            pathType: Prefix
            backend:
              service:
                name: ds-opal
                port:
                  name: "8880"

