# Example values file for using external Kubernetes secrets with DataShield
# This example shows how to reference existing secrets instead of storing credentials in values.yaml

# ================================
# External Database Configuration using Kubernetes Secrets
# ================================

externalDatabases:
  # MongoDB using external secret
  mongodb:
    existingSecret: "mongodb-credentials"
    existingSecretKeys:
      host: "host"
      port: "port"
      user: "username"
      password: "password"

  # MySQL using external secret
  mysql:
    existingSecret: "mysql-credentials"
    existingSecretKeys:
      host: "host"
      port: "port"
      database: "database"
      user: "username"
      password: "password"

  # MariaDB using external secret
  mariadb:
    existingSecret: "mariadb-credentials"
    existingSecretKeys:
      host: "host"
      port: "port"
      database: "database"
      user: "username"
      password: "password"

  # PostgreSQL using external secret
  postgresql:
    existingSecret: "postgresql-credentials"
    existingSecretKeys:
      host: "host"
      port: "port"
      database: "database"
      user: "username"
      password: "password"

# ================================
# Opal Configuration using external secret
# ================================

opal:
  enabled: true
  
  config:
    # Use external secret for Opal administrator password
    existingSecret: "opal-admin-credentials"
    csrfAllowed: "datashield.local"

  demo:
    enabled: true
    # Use external secret for demo user password
    existingSecret: "opal-demo-credentials"

# ================================
# Other Components using external secrets
# ================================

rock:
  enabled: true
  config:
    existingSecret: "rock-credentials"

agate:
  enabled: false
  config:
    existingSecret: "agate-credentials"

mica:
  enabled: false
  config:
    existingSecret: "mica-credentials"

# ================================
# Example of creating the required secrets:
# ================================

# kubectl create secret generic mongodb-credentials \
#   --from-literal=host=mongodb.example.com \
#   --from-literal=port=27017 \
#   --from-literal=username=root \
#   --from-literal=password=secure-password

# kubectl create secret generic mysql-credentials \
#   --from-literal=host=mysql.example.com \
#   --from-literal=port=3306 \
#   --from-literal=database=opal \
#   --from-literal=username=opal \
#   --from-literal=password=secure-password

# kubectl create secret generic opal-admin-credentials \
#   --from-literal=opal-administrator-password=secure-admin-password

# kubectl create secret generic rock-credentials \
#   --from-literal=rock-administrator-password=secure-rock-admin-password \
#   --from-literal=rock-manager-password=secure-rock-manager-password \
#   --from-literal=rock-user-password=secure-rock-user-password
