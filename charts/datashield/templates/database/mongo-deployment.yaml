{{- if .Values.mongodb.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "datashield.mongodb.name" . }}
  labels:
    {{- include "datashield.mongodb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.mongodb.replicaCount }}
  selector:
    matchLabels:
      {{- include "datashield.mongodb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "datashield.mongodb.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "datashield.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
              protocol: TCP
          {{- if .Values.mongodb.auth.enabled }}
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "root"
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.mongodb.secretName" . }}
                  key: mongodb-root-password
            - name: MONGO_INITDB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.mongodb.secretName" . }}
                  key: mongodb-database
          {{- end }}
          livenessProbe:
            exec:
              command:
                - mongosh
                - --quiet
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mongosh
                - --quiet
                - --eval
                - "db.adminCommand('ping')"
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {{- toYaml .Values.mongodb.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.mongodb.persistence.enabled }}
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          {{- end }}
      {{- if .Values.mongodb.persistence.enabled }}
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: {{ include "datashield.mongodb.name" . }}
      {{- end }}
      {{- with .Values.mongodb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.mongodb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
