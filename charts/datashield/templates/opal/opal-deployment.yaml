{{/*
OPAL StatefulSet Configuration
==============================
This is a StatefulSet (not a Deployment) because OPAL uses OrientDB which 
does not support concurrent access from multiple pods. The database will 
become corrupted if multiple pods try to access it simultaneously.

Key features:
- Exactly 1 replica (hardcoded)
- OrderedReady pod management
- Rolling update with maxUnavailable: 0
- Dedicated PVC per pod through volumeClaimTemplates
- ReadWriteOnce volume access mode
*/}}
{{- if .Values.opal.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "datashield.opal.name" . }}
  labels:
    {{- include "datashield.opal.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "datashield.opal.name" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "datashield.opal.selectorLabels" . | nindent 6 }}
  podManagementPolicy: OrderedReady
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        {{- include "datashield.opal.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "datashield.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: opal
          image: "{{ .Values.opal.image.repository }}:{{ .Values.opal.image.tag }}"
          imagePullPolicy: {{ .Values.opal.image.pullPolicy }}
          {{- if .Values.opal.command }}
          command:
            {{- toYaml .Values.opal.command | nindent 12 }}
          {{- end }}
          {{- if .Values.opal.args }}
          args:
            {{- toYaml .Values.opal.args | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            {{- if .Values.mongodb.enabled }}
            - name: MONGO_HOST
              value: {{ include "datashield.mongodb.name" . }}
            - name: MONGO_PORT
              value: {{ .Values.mongodb.service.port | quote }}
            {{- end }}
            {{- if .Values.mysql.enabled }}
            - name: MYSQLDATA_HOST
              value: "{{ include "datashield.mysql.name" . }}:{{ .Values.mysql.service.port }}"
            - name: MYSQLDATA_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.mysql.secretName" . }}
                  key: mysql-database
            - name: MYSQLDATA_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.mysql.secretName" . }}
                  key: mysql-username
            - name: MYSQLDATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.mysql.secretName" . }}
                  key: mysql-password
            {{- end }}
            {{- if .Values.opal.postgres.enabled }}
            - name: POSTGRESDATA_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.postgres.secretName" . }}
                  key: postgres-host
            - name: POSTGRESDATA_DATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.postgres.secretName" . }}
                  key: postgres-database
            - name: POSTGRESDATA_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.postgres.secretName" . }}
                  key: postgres-username
            - name: POSTGRESDATA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.postgres.secretName" . }}
                  key: postgres-password
            {{- end }}
            - name: OPAL_ADMINISTRATOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.secretName" . }}
                  key: opal-administrator-password
            {{- if .Values.rock.enabled }}
            - name: ROCK_HOSTS
              value: "{{ include "datashield.rock.name" . }}:{{ .Values.rock.service.port }}"
            {{- end }}
            - name: CSRF_ALLOWED
              value: {{ .Values.opal.config.csrfAllowed | quote }}
            - name: org.obiba.opal.https.port
              value: {{ .Values.opal.config.httpsPort | quote }}
            - name: org.obiba.opal.server.context-path
              value: {{ .Values.opal.config.contextPath | quote }}
            {{- if .Values.opal.demo.enabled }}
            - name: OPAL_DEMO_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "datashield.opal.demo.secretName" . }}
                  key: opal-demo-user-password
            {{- end }}
          {{- if .Values.opal.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.opal.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.opal.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.opal.readinessProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.opal.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.opal.persistence.enabled }}
          volumeMounts:
            - name: opal-data
              mountPath: /srv
            {{- if .Values.opal.demo.enabled }}
            - name: opal-demo-config
              mountPath: /demo-customisations
            {{- end }}
          {{- end }}
          {{- if .Values.opal.demo.enabled }}
          lifecycle:
            postStart:
              exec:
                command:
                  - /bin/bash
                  - -c
                  - /demo-customisations/opal-demo-customisation.sh > /customisation_output.txt 2>&1
          {{- end }}
      volumes:
        {{- if .Values.opal.demo.enabled }}
        - name: opal-demo-config
          configMap:
            name: {{ include "datashield.opal.name" . }}-demo-config
            defaultMode: 0755
        {{- end }}
      {{- with .Values.opal.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.opal.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.opal.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.opal.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: opal-data
      labels:
        {{- include "datashield.opal.labels" . | nindent 8 }}
      {{- with .Values.opal.persistence.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      accessModes:
        - {{ .Values.opal.persistence.accessMode | quote }}
      {{- if .Values.global.storageClass }}
      storageClassName: {{ .Values.global.storageClass | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.opal.persistence.size | quote }}
  {{- end }}
{{- end }}
