1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.opal.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "datashield.opal.name" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.opal.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "datashield.opal.name" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "datashield.opal.name" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.opal.service.port }}
{{- else if contains "ClusterIP" .Values.opal.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "datashield.opal.selectorLabels" . | replace ": " "=" | replace "\n" "," }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Default administrator credentials:
   Username: administrator
   {{- if .Values.opal.config.existingSecret }}
   Password: <stored in secret: {{ .Values.opal.config.existingSecret }}>
   {{- else }}
   Password: {{ .Values.opal.config.administratorPassword }}
   {{- end }}
   
   Note: Change the default password immediately in production!

3. External Database Configuration:
   DataShield requires external databases. Verify your external databases are running:
   - MongoDB: {{ .Values.externalDatabases.mongodb.host }}:{{ .Values.externalDatabases.mongodb.port }}
   - MySQL: {{ .Values.externalDatabases.mysql.host }}:{{ .Values.externalDatabases.mysql.port }}
   - MariaDB: {{ .Values.externalDatabases.mariadb.host }}:{{ .Values.externalDatabases.mariadb.port }}
   - PostgreSQL: {{ .Values.externalDatabases.postgresql.host }}:{{ .Values.externalDatabases.postgresql.port }}

4. Component Status:
{{- if .Values.opal.enabled }}
   - Opal: Enabled
{{- end }}
{{- if .Values.agate.enabled }}
   - Agate: Enabled
{{- end }}
{{- if .Values.mica.enabled }}
   - Mica: Enabled
{{- end }}

5. To check the status of your deployment:
   kubectl get pods -n {{ .Release.Namespace }} -l app.kubernetes.io/instance={{ .Release.Name }}

6. To view logs:
   kubectl logs -n {{ .Release.Namespace }} deployment/{{ include "datashield.opal.name" . }}

{{- if .Values.opal.demo.enabled }}
7. Demo Data:
   Demo data will be automatically loaded into Opal after startup.
   Check the logs for progress: kubectl logs -n {{ .Release.Namespace }} deployment/{{ include "datashield.opal.name" . }}
{{- end }}
